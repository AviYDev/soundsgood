{"ast":null,"code":"var _jsxFileName = \"/home/avix/Documents/ECE/MachineLearning/songs-prediction/songs-prediction-front/src/Container/Ranking.js\";\nimport React, { Component } from 'react';\nimport \"./Container.css\";\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      songs: this.props.songs\n    };\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  componentDidMount() {// this.getSongs();\n  }\n\n  handleRemove(i) {\n    let newItems = this.state.songs.slice();\n    newItems.splice(i, 1);\n    this.setState({\n      songs: newItems\n    });\n  }\n\n  handleAdd() {\n    let newItems = this.state.songs;\n    newItems.push({\n      \"title\": \"Title\",\n      \"artist\": \"artiste\",\n      \"order\": \"0\"\n    });\n    this.setState({\n      songs: newItems\n    });\n  }\n\n  getSongs() {\n    fetch('http://localhost:3001/spotify/', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(data.songs);\n      this.setState({\n        songs: data.songs\n      });\n    });\n  }\n\n  render() {\n    const items = this.state.songs.map((item, i) => /*#__PURE__*/React.createElement(CSSTransition, {\n      appear: true,\n      timeout: {\n        appear: 500,\n        enter: 200,\n        exit: 1000\n      },\n      classNames: \"pagefade\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"elem\",\n      key: item.order,\n      onClick: () => this.handleRemove(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, item.song_title, \" by \", item.artist)) // return container;\n    ); //  console.log(this.state.songs);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Add Song\"), /*#__PURE__*/React.createElement(TransitionGroup, {\n      transition: \"TopList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, items));\n  }\n\n}\n\nexport default Container;","map":{"version":3,"sources":["/home/avix/Documents/ECE/MachineLearning/songs-prediction/songs-prediction-front/src/Container/Ranking.js"],"names":["React","Component","TransitionGroup","CSSTransition","Container","constructor","props","state","songs","handleAdd","bind","componentDidMount","handleRemove","i","newItems","slice","splice","setState","push","getSongs","fetch","method","headers","then","res","json","data","console","log","render","items","map","item","appear","enter","exit","order","song_title","artist"],"mappings":"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","sourcesContent":["import React, {\n    Component,\n} from 'react';\nimport \"./Container.css\";\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\n\n\n\nclass Container extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            songs: this.props.songs,\n        }\n        this.handleAdd= this.handleAdd.bind(this);\n\n    }\n\n    componentDidMount() {\n           // this.getSongs();\n    }\n\n    handleRemove(i) {\n        let newItems = this.state.songs.slice();\n        newItems.splice(i, 1);\n        this.setState({songs: newItems});\n    }\n\n    handleAdd() {\n        let newItems = this.state.songs;\n\n\n        newItems.push({\n            \"title\": \"Title\",\n            \"artist\": \"artiste\",\n            \"order\": \"0\"\n        })\n\n\n        this.setState({songs: newItems});\n    }\n\n    getSongs(){\n        fetch('http://localhost:3001/spotify/',{\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(res => res.json())\n            .then((data) => {\n                console.log(data.songs)\n                this.setState({songs : data.songs});\n            })\n\n    }\n    render() {\n\n\n\n\n        const items = this.state.songs.map((item, i) => (\n            <CSSTransition appear timeout={{appear:500,enter:200,exit:1000}} classNames=\"pagefade\" key={i}>\n            <div  className={\"elem\"} key={item.order}  onClick={() => this.handleRemove(i)}>\n                {item.song_title} by {item.artist}\n            </div>\n    </CSSTransition>\n            // return container;\n        ));\n      //  console.log(this.state.songs);\n        return(\n\n\n            <div>\n\n                <button onClick={this.handleAdd}>Add Song</button>\n        <TransitionGroup\n\n\n        transition={\"TopList\"}>\n            {items}\n        </TransitionGroup>\n            </div>\n    );\n    }\n}\n\n\nexport default Container;"]},"metadata":{},"sourceType":"module"}